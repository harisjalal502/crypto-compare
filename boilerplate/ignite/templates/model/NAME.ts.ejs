---
patches:
  - path: "app/models/root-store/root-store.ts"
    after: "from \"mobx-state-tree\"\n"
    insert: "import { <%= props.pascalCaseName %>Model } from \"../<%= props.kebabCaseName %>/<%= props.kebabCaseName %>\"\n"
    skip: <%= !props.kebabCaseName.endsWith('store') %>
  - path: "app/models/root-store/root-store.ts"
    after: "types.model(\"RootStore\").props({\n"
    insert: "  <%= props.camelCaseName %>: types.optional(<%= props.pascalCaseName %>Model, {} as any),\n"
    skip: <%= !props.kebabCaseName.endsWith('store') %>
  - path: "app/models/index.ts"
    append: "export * from \"./<%= props.kebabCaseName %>/<%= props.kebabCaseName %>\"\n" 
    skip: <%= props.skipIndexFile %>
---
import { Instance, SnapshotOut, types } from "mobx-state-tree"

/**
 * Model description here for TypeScript hints.
 */
export const <%= props.pascalCaseName %>Model = types
  .model("<%= props.pascalCaseName %>")
  .props({})
  .views((self) => ({})) // eslint-disable-line @typescript-eslint/no-unused-vars
  .actions((self) => ({})) // eslint-disable-line @typescript-eslint/no-unused-vars

type <%= props.pascalCaseName %>Type = Instance<typeof <%= props.pascalCaseName %>Model>
export interface <%= props.pascalCaseName %> extends <%= props.pascalCaseName %>Type {}
type <%= props.pascalCaseName %>SnapshotType = SnapshotOut<typeof <%= props.pascalCaseName %>Model>
export interface <%= props.pascalCaseName %>Snapshot extends <%= props.pascalCaseName %>SnapshotType {}
export const create<%= props.pascalCaseName %>DefaultModel = () => types.optional(<%= props.pascalCaseName %>Model, {})
